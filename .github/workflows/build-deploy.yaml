name: Build and Deploy Services
on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Service Changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Detect changed services
        id: changes
        run: |
          services=$(ls -d services/* | sed -E 's/^services\///')
          
          changed_services=()
          
          for service in "${services[@]}"; do
            # Check if there are changes in the service directory, excluding infrastructure subdirectory
            if git diff --name-only HEAD~1 HEAD | grep -E "^services/${service}/" | grep -vE "^services/${service}/infrastructure/" | head -1 > /dev/null; then
              changed_services+=("$service")
            fi
          done
          
          if [ ${#changed_services[@]} -gt 0 ]; then
            matrix=$(printf '%s\n' "${changed_services[@]}" | jq -R . | jq -s .)
            echo "matrix={\"service\":$matrix}" >> $GITHUB_OUTPUT
            echo "Changed services: ${changed_services[*]}"
          else
            echo "matrix={\"service\":[]}" >> $GITHUB_OUTPUT
            echo "No service changes detected"
          fi

  build-and-deploy:
    name: Build and Deploy ${{ matrix.service }}
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '{"service":[]}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.matrix).service }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: aksell/axel.to
          tags: |
            type=sha,prefix=${{ matrix.service }}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          file: ./services/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Deploy service
        run: |
          echo "Deploying ${{ matrix.service }} service..."
          echo "Image: ${{ steps.meta.outputs.tags }}"
    