syntax = "proto3";

package services.commute.api;

import "google/api/annotations.proto";
import "shared/types/common.proto";

service CommuteService {
  // Calculates the average commute time for a location 30 days in the future
  rpc Calculate(CalculateRequest) returns (CalculateResponse) {
    option (google.api.http) = {
      post: "/calculate"
      body: "*"
    };
  }

  // Adds a new point of interest to use in future calculation requests
  rpc AddPointOfInterest(AddPointOfInterestRequest) returns (AddPointOfInterestResponse) {
    option (google.api.http) = {
      post: "/addPointOfInterest"
      body: "*"
    };
  }
}

message CalculateRequest {
  shared.types.Address home_address = 1;
  optional bool disable_traffic = 2;
}

message CalculateResponse {
  repeated PointOfInterestDuration points_of_interest = 1;
}

message AddPointOfInterestRequest {
  shared.types.Address address = 1;
  repeated string tags = 2;
}

message AddPointOfInterestResponse {
  string id = 1;
  string place_id = 2;
}

message PointOfInterest {
  string id = 1;
  shared.types.Address address = 2;
  string place_id = 3;
  repeated string tags = 4;
}

message PointOfInterestDuration {
  PointOfInterest point_of_interest = 1;
  Duration duration = 2;
}

message Duration {
  uint32 value = 1;
  TimeUnit unit = 2;
}

enum TimeUnit {
  SECONDS = 0;
  MINUTES = 1;
  HOURS = 2;
}
